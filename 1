local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Portal = Window:AddTab({ Title = "Portal", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do


    local MultiDropdown = Tabs.Portal:AddDropdown("MultiDropdown", {
        Title = "Portals",
        Description = "Tier",
        Values = {"Common", "Uncommon", "Legendary"},
        Multi = true,
        Default = {nil},
    })

    MultiDropdown:OnChanged(function(Value)
        local Values = {}
        for Value, State in next, Value do
            table.insert(Values, Value)
        end
        if table.find(Values,"Common") then
            getgenv().Common = true
        end
        if table.find(Values,"Uncommon") then
            getgenv().Uncommon = true
        end
        if table.find(Values,"Legendary") then
            getgenv().Legendary = true
        end
        if not table.find(Values,"Common") and getgenv().Common then
            getgenv().Common = false
        end
        if not table.find(Values,"Uncommon") and getgenv().Uncommon then
            getgenv().Uncommon = false
        end
        if not table.find(Values,"Legendary") and getgenv().Legendary then
            getgenv().Legendary = false
        end
    end)

    Tabs.Main:AddButton({
        Title = "Button",
        Description = "Very important button",
        Callback = function()
            print(getgenv().Common,getgenv().Uncommon,getgenv().Legendary)
        end
    })

    Tabs.Main:AddToggle("Toggle1", {Title = "Toggle", Default = false })


end -- End Of Do

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("CrazyDay")
SaveManager:SetFolder("CrazyDay/"..game.Players.LocalPlayer.Name)
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
Window:SelectTab(1)
SaveManager:LoadAutoloadConfig()

coroutine.resume(coroutine.create(function()
    if Options.Toggle1.Value then
        print("WORK KUB")
    end
end))
